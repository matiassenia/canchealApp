// ðŸ§¾ schema.prisma
//prisma
// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  role     Role     @default(USER)
  clubs    Club[]   @relation("ClubOwner")
  bookings Booking[]

  
  @@map("user")
}

enum Role {
  USER
  OWNER
  ADMIN
}

model Club {
  id          Int     @id @default(autoincrement())
  name        String
  address     String
  zone        String
  description String
  ownerId     Int
  owner       User    @relation("ClubOwner", fields: [ownerId], references: [id])
  fields      Field[]
}

model Field {
  id       Int        @id @default(autoincrement())
  name     String
  type     String
  imageUrl String?
  clubId   Int
  club     Club       @relation(fields: [clubId], references: [id])
  bookings Booking[]
  availability Availability[]
}

model Availability {
  id        Int     @id @default(autoincrement())
  field     Field   @relation(fields: [fieldId], references: [id])
  fieldId   Int
  weekday   Int     // 0=Domingo ... 6=SÃ¡bado
  startTime String
  endTime   String
}

model Booking {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  field     Field    @relation(fields: [fieldId], references: [id])
  fieldId   Int
  date      DateTime
  timeSlot  String
  status    BookingStatus @default(PENDING)
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
